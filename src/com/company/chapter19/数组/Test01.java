package com.company.chapter19.数组;

/*
 array
 1、java语言中的数组十一种引用数据类型，不属于基本数据类型，数组的父类是object
 2、数组实际上是一个容器，可以同时容纳多个元素。
 3、数组当中可以存储基本数据类型的数据，也可以储存引用数据类型的数据
 4、数组因为是引用类型，所以数组对象是堆内存当中。数组是存储在
 5、对于数组当中如果存储的是java对象的化，实际上存储的是对象的引用地址
 6、数组一旦创建、长度不可变
 7、数组的分类：一维数组、二维数组、三位数字、多维数组、
 8、所有的数组对象都有length属性、用来获取数组中元素的个数。
 9、java种的数组要求数组中的元素的类型统一，int类型只能储存int类型，
 10、数组在内存方面存储的时候，内存地址是连续的，数组实际上是一种简单的数据结构。
 11、数组的内存地址就是第一个元素的内存地址，所有的数组都是拿第一个元素的内存地址作为整个数组对象的内存地址
 12、数组中每一个元素都是又下标的。下表从0开始，最后一个元素的下标是length-1
       存取通过下标进行。
 13、数组这种数据结构的优点和缺点是什么
        优点：查询\查找\检索某个下标的元素时效率极高、可以说是查询效率最高的
        因为：
        第一：每个元素的内存地址在空间存储上是连续的
        第二：每一个元素的类型相同，所有占用空间大小一样
        第三：如果知道第一个元素的内存地址。知道每一个元素占用空间的大小，有知道下标，所有通过一个数学表达式就可以计算出某一个下标上元素的内存地址，
        直接通过内存地址定位元，所以数组的检索效率最高。
        数组中存储100个元素，或者存储100万个元素，在元素查找方面，效率是相同的。

        缺点：由于为了保证数组中每个元素的内存地址连续，所以在数组上随机删除和增加元素的时候，需要将插入位置后的所有元素的内存地址
        向前或者向后移动。
        不能储存大数据，因为很难找到一块特别大的连续的内存中间，
 14、 怎么声明、定义一个一维数组
    语法格式：
        int[] array1;
        double[] array2;
        boolean[] array3;
        String[] array4;
        Object[] array5;
 15、怎么初始化一个一维数组呢？
        包括两种方式：静态初始化一维数组，动态初始化一维数组。
        静态初始化语法格式：
            int[] array={100,200,300};
        动态初始化语法格式：
            int[] array= new int[5]; // 这里的5表示数组的元素格数。
            // 初始化一个5个长度的int 类型的元素，每个元素默认值为0；


 */
public class Test01 {

    public static void main(String[] args) {
        int[] a1 = {1, 100, 1200, 300};
        System.out.println(a1.length);

        // 通过下标存储和选取
        System.out.println(a1[0]);
        System.out.println(a1[a1.length - 1]);

        // 改
//        把第一个元素改为111
        a1[0] = 111;
        a1[a1.length - 1] = 0;

        //一维数组遍历
        for (int i = 0; i < a1.length; i++) {
            System.out.println(a1[i]);
        }

        // 下标越界
        System.out.println(a1[6]);
    }

}
